// ********************
// *** Миксины ***
// ********************

// *** Установка параметров шрифта ***
@mixin font($font-size: 16px, $line-height: 24px, $font-weight: null) {
    font-size: $font-size;
    line-height: $line-height;
    font-weight: $font-weight;
}

// Миксин для fancybox
@function max($numbers...) {
    @return m#{a}x(#{$numbers});
}

@function min($numbers...) {
    @return m#{i}n(#{$numbers});
}

// Using
//.div {
//   @include _1170 {
//       @content;
//   }
//}

@mixin _767 {
    @media (max-width: 767px) {
        @content;
    }
}

@mixin _media-hover {
    @media (hover: hover) {
        @content;
    }
}

// Str-replace function
@function str-replace($string, $search, $replace: "") {
    $index: str-index($string, $search);
    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace +
            str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }
    @return $string;
}

$encoding-reference: (("<", "%3C"), (">", "%3E"), ('"', "'"), ("#", "%23"), ("&", "%26"));

@function svg-encode($svg) {
    @each $char, $encoded in $encoding-reference {
        $svg: str-replace($svg, $char, $encoded);
    }
    @return "data:image/svg+xml," + $svg;
}

// Миксин для генерации font-face
@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
    $src: null;

    $extmods: (
        eot: "?",
        svg: "#" + str-replace($name, " ", "_"),
    );

    $formats: (
        otf: "opentype",
        ttf: "truetype",
    );

    @each $ext in $exts {
        $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
        $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
        $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
    }

    @font-face {
        font-family: quote($name);
        font-style: $style;
        font-weight: $weight;
        font-display: swap;
        src: $src;
    }
}
